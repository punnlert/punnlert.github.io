import{S as Lt,i as Mt,s as Wt,k as o,q as i,a as h,y as Kt,l as s,m as l,r as p,h as t,c as f,z as Gt,n as r,b as c,G as a,A as qt,g as It,d as Rt,B as Ut,O as Ft}from"../chunks/index.90fa6b41.js";import{C as Jt}from"../chunks/CodeBlock.bcc0a33b.js";function Qt($e){let u,J=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Hero</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>About</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token punctuation">/></span></span></code>`;return{c(){u=o("pre"),this.h()},l(d){u=s(d,"PRE",{class:!0});var j=l(u);j.forEach(t),this.h()},h(){r(u,"class","language-html")},m(d,j){c(d,u,j),u.innerHTML=J},p:Ft,d(d){d&&t(u)}}}function Vt($e){let u,J,d,j,He,ae,T,v,oe,Se,se,m,xe,N,ze,Oe,Q,Be,De,le,C,b,re,je,ne,M,Ne,ie,$,k,pe,Le,ce,W,Me,ue,H,E,he,We,fe,K,Ke,de,S,me,x,_,we,Ge,ve,w,qe,L,Ie,Re,V,Ue,Fe,be,z,g,ke,Je,Ee,G,Qe,_e,O,y,Ve,X,Xe,Ye,Y,Ze,et,tt,P,at,Z,ot,st,ee,lt,rt,ge,B,A,ye,nt,Pe,D,it,q,pt,ct,Ae;return S=new Jt({props:{lang:"html",filename:"+page.svelte",$$slots:{default:[Qt]},$$scope:{ctx:$e}}}),{c(){u=o("p"),J=i("This project follows the basic "),d=o("a"),j=i("SvelteKit structure"),He=i(", with some added conventions to make customization a post-management easier."),ae=h(),T=o("h2"),v=o("a"),oe=o("span"),Se=i("Components"),se=h(),m=o("p"),xe=i("The components are organized following the "),N=o("a"),ze=i("Atomic Design"),Oe=i(" principles, albeit somewhat simplified. Components are in the "),Q=o("code"),Be=i("src/lib/components"),De=i(" folder, and are organized in the following way:"),le=h(),C=o("h3"),b=o("a"),re=o("span"),je=i("Atoms"),ne=h(),M=o("p"),Ne=i("Atoms are the most basic components, which can be seen as building blocks for other components. They’re small and self-contained, and do only one thing. Examples of atoms are buttons, inputs, and tags."),ie=h(),$=o("h3"),k=o("a"),pe=o("span"),Le=i("Molecules"),ce=h(),W=o("p"),Me=i("Molecules are groups of atoms that work together to form a more complex component. Examples of molecules are cards, groups of links, or an alert callout."),ue=h(),H=o("h3"),E=o("a"),he=o("span"),We=i("Organisms"),fe=h(),K=o("p"),Ke=i("Organisms, in this project, are code blocks that represent a section of a page, such as the header, footer and hero section. They can be used directly in a page as a sort of building block, so the page’s code can be as simple as this:"),de=h(),Kt(S.$$.fragment),me=h(),x=o("h2"),_=o("a"),we=o("span"),Ge=i("Component Gallery"),ve=h(),w=o("p"),qe=i("This project uses "),L=o("a"),Ie=i("Histoire"),Re=i(" to be able to see and develop components in isolation. To open it, run "),V=o("code"),Ue=i("npm run story:dev"),Fe=i(". This way you can customize and build new components with placeholder content and without worrying about where to put them in a page."),be=h(),z=o("h2"),g=o("a"),ke=o("span"),Je=i("Pages"),Ee=h(),G=o("p"),Qe=i("Pages obey the default SvelteKit structure, but can be summarized as follows:"),_e=h(),O=o("ul"),y=o("li"),Ve=i("There are two different file types: the pages ("),X=o("code"),Xe=i("+page.svelte"),Ye=i(") and the layouts ("),Y=o("code"),Ze=i("+layout.svelte"),et=i("). Layouts are a way to reuse the same structure between different pages without having to duplicate code;"),tt=h(),P=o("li"),at=i("There are two different page layouts in this site: the “Waves” layout, which all pages inside the "),Z=o("code"),ot=i("(waves)"),st=i(" folder use, and the “Blog Article” layout, which all pages inside the "),ee=o("code"),lt=i("(blog-article)"),rt=i(" folder use;"),ge=h(),B=o("h2"),A=o("a"),ye=o("span"),nt=i("Blog Posts"),Pe=h(),D=o("p"),it=i("To know how blog posts work and how to create new ones, check out "),q=o("a"),pt=i("How Blog Posts Work"),ct=i("."),this.h()},l(e){u=s(e,"P",{});var n=l(u);J=p(n,"This project follows the basic "),d=s(n,"A",{href:!0,rel:!0});var te=l(d);j=p(te,"SvelteKit structure"),te.forEach(t),He=p(n,", with some added conventions to make customization a post-management easier."),n.forEach(t),ae=f(e),T=s(e,"H2",{id:!0});var ut=l(T);v=s(ut,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var bt=l(v);oe=s(bt,"SPAN",{}),l(oe).forEach(t),bt.forEach(t),Se=p(ut,"Components"),ut.forEach(t),se=f(e),m=s(e,"P",{});var I=l(m);xe=p(I,"The components are organized following the "),N=s(I,"A",{href:!0,rel:!0});var kt=l(N);ze=p(kt,"Atomic Design"),kt.forEach(t),Oe=p(I," principles, albeit somewhat simplified. Components are in the "),Q=s(I,"CODE",{});var Et=l(Q);Be=p(Et,"src/lib/components"),Et.forEach(t),De=p(I," folder, and are organized in the following way:"),I.forEach(t),le=f(e),C=s(e,"H3",{id:!0});var ht=l(C);b=s(ht,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var _t=l(b);re=s(_t,"SPAN",{}),l(re).forEach(t),_t.forEach(t),je=p(ht,"Atoms"),ht.forEach(t),ne=f(e),M=s(e,"P",{});var gt=l(M);Ne=p(gt,"Atoms are the most basic components, which can be seen as building blocks for other components. They’re small and self-contained, and do only one thing. Examples of atoms are buttons, inputs, and tags."),gt.forEach(t),ie=f(e),$=s(e,"H3",{id:!0});var ft=l($);k=s(ft,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var yt=l(k);pe=s(yt,"SPAN",{}),l(pe).forEach(t),yt.forEach(t),Le=p(ft,"Molecules"),ft.forEach(t),ce=f(e),W=s(e,"P",{});var Pt=l(W);Me=p(Pt,"Molecules are groups of atoms that work together to form a more complex component. Examples of molecules are cards, groups of links, or an alert callout."),Pt.forEach(t),ue=f(e),H=s(e,"H3",{id:!0});var dt=l(H);E=s(dt,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var At=l(E);he=s(At,"SPAN",{}),l(he).forEach(t),At.forEach(t),We=p(dt,"Organisms"),dt.forEach(t),fe=f(e),K=s(e,"P",{});var Tt=l(K);Ke=p(Tt,"Organisms, in this project, are code blocks that represent a section of a page, such as the header, footer and hero section. They can be used directly in a page as a sort of building block, so the page’s code can be as simple as this:"),Tt.forEach(t),de=f(e),Gt(S.$$.fragment,e),me=f(e),x=s(e,"H2",{id:!0});var mt=l(x);_=s(mt,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var Ct=l(_);we=s(Ct,"SPAN",{}),l(we).forEach(t),Ct.forEach(t),Ge=p(mt,"Component Gallery"),mt.forEach(t),ve=f(e),w=s(e,"P",{});var R=l(w);qe=p(R,"This project uses "),L=s(R,"A",{href:!0,rel:!0});var $t=l(L);Ie=p($t,"Histoire"),$t.forEach(t),Re=p(R," to be able to see and develop components in isolation. To open it, run "),V=s(R,"CODE",{});var Ht=l(V);Ue=p(Ht,"npm run story:dev"),Ht.forEach(t),Fe=p(R,". This way you can customize and build new components with placeholder content and without worrying about where to put them in a page."),R.forEach(t),be=f(e),z=s(e,"H2",{id:!0});var wt=l(z);g=s(wt,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var St=l(g);ke=s(St,"SPAN",{}),l(ke).forEach(t),St.forEach(t),Je=p(wt,"Pages"),wt.forEach(t),Ee=f(e),G=s(e,"P",{});var xt=l(G);Qe=p(xt,"Pages obey the default SvelteKit structure, but can be summarized as follows:"),xt.forEach(t),_e=f(e),O=s(e,"UL",{});var Te=l(O);y=s(Te,"LI",{});var U=l(y);Ve=p(U,"There are two different file types: the pages ("),X=s(U,"CODE",{});var zt=l(X);Xe=p(zt,"+page.svelte"),zt.forEach(t),Ye=p(U,") and the layouts ("),Y=s(U,"CODE",{});var Ot=l(Y);Ze=p(Ot,"+layout.svelte"),Ot.forEach(t),et=p(U,"). Layouts are a way to reuse the same structure between different pages without having to duplicate code;"),U.forEach(t),tt=f(Te),P=s(Te,"LI",{});var F=l(P);at=p(F,"There are two different page layouts in this site: the “Waves” layout, which all pages inside the "),Z=s(F,"CODE",{});var Bt=l(Z);ot=p(Bt,"(waves)"),Bt.forEach(t),st=p(F," folder use, and the “Blog Article” layout, which all pages inside the "),ee=s(F,"CODE",{});var Dt=l(ee);lt=p(Dt,"(blog-article)"),Dt.forEach(t),rt=p(F," folder use;"),F.forEach(t),Te.forEach(t),ge=f(e),B=s(e,"H2",{id:!0});var vt=l(B);A=s(vt,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var jt=l(A);ye=s(jt,"SPAN",{}),l(ye).forEach(t),jt.forEach(t),nt=p(vt,"Blog Posts"),vt.forEach(t),Pe=f(e),D=s(e,"P",{});var Ce=l(D);it=p(Ce,"To know how blog posts work and how to create new ones, check out "),q=s(Ce,"A",{href:!0});var Nt=l(q);pt=p(Nt,"How Blog Posts Work"),Nt.forEach(t),ct=p(Ce,"."),Ce.forEach(t),this.h()},h(){r(d,"href","https://kit.svelte.dev/docs/project-structure"),r(d,"rel","nofollow"),r(v,"class","heading-link"),r(v,"title","Permalink"),r(v,"aria-hidden","true"),r(v,"href","#components"),r(T,"id","components"),r(N,"href","https://medium.com/@WeAreMobile1st/atomic-design-getting-started-916bc81bad0e"),r(N,"rel","nofollow"),r(b,"class","heading-link"),r(b,"title","Permalink"),r(b,"aria-hidden","true"),r(b,"href","#atoms"),r(C,"id","atoms"),r(k,"class","heading-link"),r(k,"title","Permalink"),r(k,"aria-hidden","true"),r(k,"href","#molecules"),r($,"id","molecules"),r(E,"class","heading-link"),r(E,"title","Permalink"),r(E,"aria-hidden","true"),r(E,"href","#organisms"),r(H,"id","organisms"),r(_,"class","heading-link"),r(_,"title","Permalink"),r(_,"aria-hidden","true"),r(_,"href","#component-gallery"),r(x,"id","component-gallery"),r(L,"href","https://histoire.dev"),r(L,"rel","nofollow"),r(g,"class","heading-link"),r(g,"title","Permalink"),r(g,"aria-hidden","true"),r(g,"href","#pages"),r(z,"id","pages"),r(A,"class","heading-link"),r(A,"title","Permalink"),r(A,"aria-hidden","true"),r(A,"href","#blog-posts"),r(B,"id","blog-posts"),r(q,"href","/blog-posts")},m(e,n){c(e,u,n),a(u,J),a(u,d),a(d,j),a(u,He),c(e,ae,n),c(e,T,n),a(T,v),a(v,oe),a(T,Se),c(e,se,n),c(e,m,n),a(m,xe),a(m,N),a(N,ze),a(m,Oe),a(m,Q),a(Q,Be),a(m,De),c(e,le,n),c(e,C,n),a(C,b),a(b,re),a(C,je),c(e,ne,n),c(e,M,n),a(M,Ne),c(e,ie,n),c(e,$,n),a($,k),a(k,pe),a($,Le),c(e,ce,n),c(e,W,n),a(W,Me),c(e,ue,n),c(e,H,n),a(H,E),a(E,he),a(H,We),c(e,fe,n),c(e,K,n),a(K,Ke),c(e,de,n),qt(S,e,n),c(e,me,n),c(e,x,n),a(x,_),a(_,we),a(x,Ge),c(e,ve,n),c(e,w,n),a(w,qe),a(w,L),a(L,Ie),a(w,Re),a(w,V),a(V,Ue),a(w,Fe),c(e,be,n),c(e,z,n),a(z,g),a(g,ke),a(z,Je),c(e,Ee,n),c(e,G,n),a(G,Qe),c(e,_e,n),c(e,O,n),a(O,y),a(y,Ve),a(y,X),a(X,Xe),a(y,Ye),a(y,Y),a(Y,Ze),a(y,et),a(O,tt),a(O,P),a(P,at),a(P,Z),a(Z,ot),a(P,st),a(P,ee),a(ee,lt),a(P,rt),c(e,ge,n),c(e,B,n),a(B,A),a(A,ye),a(B,nt),c(e,Pe,n),c(e,D,n),a(D,it),a(D,q),a(q,pt),a(D,ct),Ae=!0},p(e,[n]){const te={};n&1&&(te.$$scope={dirty:n,ctx:e}),S.$set(te)},i(e){Ae||(It(S.$$.fragment,e),Ae=!0)},o(e){Rt(S.$$.fragment,e),Ae=!1},d(e){e&&t(u),e&&t(ae),e&&t(T),e&&t(se),e&&t(m),e&&t(le),e&&t(C),e&&t(ne),e&&t(M),e&&t(ie),e&&t($),e&&t(ce),e&&t(W),e&&t(ue),e&&t(H),e&&t(fe),e&&t(K),e&&t(de),Ut(S,e),e&&t(me),e&&t(x),e&&t(ve),e&&t(w),e&&t(be),e&&t(z),e&&t(Ee),e&&t(G),e&&t(_e),e&&t(O),e&&t(ge),e&&t(B),e&&t(Pe),e&&t(D)}}}class Zt extends Lt{constructor(u){super(),Mt(this,u,null,Vt,Wt,{})}}export{Zt as component};
